<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>memcpy (60,606,060 samples, 0.05%)</title><rect x="188.8" y="341" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="191.79" y="351.5" ></text>
</g>
<g >
<title>PyUnicode_New (20,202,020 samples, 0.02%)</title><rect x="15.1" y="341" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="18.07" y="351.5" ></text>
</g>
<g >
<title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (40,404,040 samples, 0.03%)</title><rect x="160.0" y="325" width="0.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="162.98" y="335.5" ></text>
</g>
<g >
<title>epoll_wait (30,303,030 samples, 0.03%)</title><rect x="169.4" y="325" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="172.42" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (40,404,040 samples, 0.03%)</title><rect x="164.6" y="325" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="167.55" y="335.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (70,707,070 samples, 0.06%)</title><rect x="123.0" y="325" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="126.03" y="335.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq::Fq as ff::Field&gt;::sub_assign (1,121,212,110 samples, 0.93%)</title><rect x="97.4" y="325" width="11.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="100.41" y="335.5" ></text>
</g>
<g >
<title>__sched_text_end (73,010,100,280 samples, 60.84%)</title><rect x="190.3" y="245" width="717.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="193.28" y="255.5" >__sched_text_end</text>
</g>
<g >
<title>write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="325" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="174.11" y="335.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (232,323,230 samples, 0.19%)</title><rect x="131.6" y="309" width="2.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="134.58" y="319.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq::Fq as ff::Field&gt;::double (111,111,110 samples, 0.09%)</title><rect x="52.8" y="325" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="55.81" y="335.5" ></text>
</g>
<g >
<title>__pyx_pw_6gevent_5libev_8corecext_4loop_57run_callback (20,202,020 samples, 0.02%)</title><rect x="150.1" y="325" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="153.15" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (434,343,430 samples, 0.36%)</title><rect x="32.8" y="325" width="4.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="35.85" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (131,313,130 samples, 0.11%)</title><rect x="37.1" y="325" width="1.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="40.12" y="335.5" ></text>
</g>
<g >
<title>PyCFunction_Call (20,202,020 samples, 0.02%)</title><rect x="109.3" y="325" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="112.33" y="335.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.02%)</title><rect x="131.2" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.18" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40,404,040 samples, 0.03%)</title><rect x="188.0" y="341" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="190.99" y="351.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.03%)</title><rect x="131.1" y="229" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.08" y="239.5" ></text>
</g>
<g >
<title>__gmpn_addlsh1_n_coreisbr (121,212,120 samples, 0.10%)</title><rect x="140.1" y="325" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="143.12" y="335.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq2::Fq2 as ff::Field&gt;::square (20,202,020 samples, 0.02%)</title><rect x="44.6" y="325" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="47.57" y="335.5" ></text>
</g>
<g >
<title>__pyx_tp_new_6gevent_8__waiter_Waiter (20,202,020 samples, 0.02%)</title><rect x="187.8" y="341" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="190.79" y="351.5" ></text>
</g>
<g >
<title>[pypairing.cpython-36m-x86_64-linux-gnu.so] (30,303,030 samples, 0.03%)</title><rect x="128.5" y="325" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="131.50" y="335.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.02%)</title><rect x="131.2" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.18" y="175.5" ></text>
</g>
<g >
<title>__pyx_tp_new_6gevent_5libev_8corecext_callback (20,202,020 samples, 0.02%)</title><rect x="151.2" y="325" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="154.24" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (50,505,050 samples, 0.04%)</title><rect x="907.6" y="197" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="910.61" y="207.5" ></text>
</g>
<g >
<title>PyThreadState_Get (40,404,040 samples, 0.03%)</title><rect x="126.5" y="325" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="129.51" y="335.5" ></text>
</g>
<g >
<title>schedule_idle (50,505,050 samples, 0.04%)</title><rect x="908.2" y="277" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="911.21" y="287.5" ></text>
</g>
<g >
<title>PyTuple_GetSlice (20,202,020 samples, 0.02%)</title><rect x="13.8" y="341" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="16.77" y="351.5" ></text>
</g>
<g >
<title>PyBytes_Size (30,303,030 samples, 0.03%)</title><rect x="109.0" y="325" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="112.03" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="325" width="281.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="911.71" y="335.5" >x86_64_start_kernel</text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (20,202,020 samples, 0.02%)</title><rect x="128.9" y="309" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="131.89" y="319.5" ></text>
</g>
<g >
<title>__gmpn_mul_basecase_coreisbr (80,808,080 samples, 0.07%)</title><rect x="182.7" y="341" width="0.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="185.73" y="351.5" ></text>
</g>
<g >
<title>rest_init (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="261" width="281.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="911.71" y="271.5" >rest_init</text>
</g>
<g >
<title>ena_get_strings (20,202,020 samples, 0.02%)</title><rect x="907.6" y="69" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="910.61" y="79.5" ></text>
</g>
<g >
<title>PyLong_FromLong (1,070,707,060 samples, 0.89%)</title><rect x="111.4" y="325" width="10.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="114.41" y="335.5" ></text>
</g>
<g >
<title>ena_dump_stats_to_buf (50,505,050 samples, 0.04%)</title><rect x="907.6" y="101" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="910.61" y="111.5" ></text>
</g>
<g >
<title>arch_cpu_idle (73,010,100,280 samples, 60.84%)</title><rect x="190.3" y="261" width="717.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="193.28" y="271.5" >arch_cpu_idle</text>
</g>
<g >
<title>secondary_startup_64 (101,676,766,660 samples, 84.73%)</title><rect x="190.2" y="341" width="999.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="193.18" y="351.5" >secondary_startup_64</text>
</g>
<g >
<title>_PyDict_LoadGlobal (20,202,020 samples, 0.02%)</title><rect x="134.9" y="325" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="137.85" y="335.5" ></text>
</g>
<g >
<title>__nss_group_lookup (777,777,770 samples, 0.65%)</title><rect x="141.3" y="325" width="7.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="144.31" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (50,505,050 samples, 0.04%)</title><rect x="908.2" y="261" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="911.21" y="271.5" ></text>
</g>
<g >
<title>default_idle_call (73,010,100,280 samples, 60.84%)</title><rect x="190.3" y="277" width="717.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="193.28" y="287.5" >default_idle_call</text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (131,313,130 samples, 0.11%)</title><rect x="40.2" y="325" width="1.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="43.20" y="335.5" ></text>
</g>
<g >
<title>default_idle_call (28,595,959,310 samples, 23.83%)</title><rect x="908.7" y="213" width="281.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="911.71" y="223.5" >default_idle_call</text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (20,202,020 samples, 0.02%)</title><rect x="189.5" y="341" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="192.48" y="351.5" ></text>
</g>
<g >
<title>PyObject_GC_UnTrack (30,303,030 samples, 0.03%)</title><rect x="123.7" y="325" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="126.73" y="335.5" ></text>
</g>
<g >
<title>PyFrame_New (101,010,100 samples, 0.08%)</title><rect x="110.2" y="325" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="113.22" y="335.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (30,303,030 samples, 0.03%)</title><rect x="13.1" y="341" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="16.08" y="351.5" ></text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.04%)</title><rect x="130.9" y="309" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.88" y="319.5" ></text>
</g>
<g >
<title>mmput (30,303,030 samples, 0.03%)</title><rect x="188.0" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="190.99" y="271.5" ></text>
</g>
<g >
<title>core::array::_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$mut$u20$$u5b$T$u3b$$u20$N$u5d$$GT$::into_iter::h9b4f26f87d2cd0a4 (40,404,040 samples, 0.03%)</title><rect x="151.4" y="325" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="154.44" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (222,222,220 samples, 0.19%)</title><rect x="42.1" y="325" width="2.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="45.08" y="335.5" ></text>
</g>
<g >
<title>PyModule_AddIntConstant (20,202,020 samples, 0.02%)</title><rect x="12.4" y="341" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="15.38" y="351.5" ></text>
</g>
<g >
<title>_PyDict_GetItemId (30,303,030 samples, 0.03%)</title><rect x="134.6" y="325" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="137.56" y="335.5" ></text>
</g>
<g >
<title>recv (30,303,030 samples, 0.03%)</title><rect x="189.8" y="341" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="192.78" y="351.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.02%)</title><rect x="131.2" y="181" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.18" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter_mut (80,808,080 samples, 0.07%)</title><rect x="168.5" y="325" width="0.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="171.53" y="335.5" ></text>
</g>
<g >
<title>python3 (18,303,030,120 samples, 15.25%)</title><rect x="10.2" y="357" width="180.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="13.20" y="367.5" >python3</text>
</g>
<g >
<title>arch_cpu_idle (28,595,959,310 samples, 23.83%)</title><rect x="908.7" y="197" width="281.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="911.71" y="207.5" >arch_cpu_idle</text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1,202,020,190 samples, 1.00%)</title><rect x="19.7" y="325" width="11.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="22.73" y="335.5" ></text>
</g>
<g >
<title>PyArg_ParseTupleAndKeywords (20,202,020 samples, 0.02%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.20" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="213" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="174.11" y="223.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.02%)</title><rect x="907.9" y="53" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="910.91" y="63.5" ></text>
</g>
<g >
<title>native_safe_halt (72,999,999,270 samples, 60.83%)</title><rect x="190.4" y="229" width="717.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="193.38" y="239.5" >native_safe_halt</text>
</g>
<g >
<title>__pyx_pw_6gevent_11__hub_local_7get_hub_noargs (20,202,020 samples, 0.02%)</title><rect x="187.6" y="341" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="190.60" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (40,404,040 samples, 0.03%)</title><rect x="135.2" y="325" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="138.15" y="335.5" ></text>
</g>
<g >
<title>__Pyx_Raise.constprop.76 (20,202,020 samples, 0.02%)</title><rect x="139.7" y="325" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="142.72" y="335.5" ></text>
</g>
<g >
<title>__pyx_pw_6gevent_8__waiter_6Waiter_11switch (20,202,020 samples, 0.02%)</title><rect x="150.5" y="325" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="153.55" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (262,626,260 samples, 0.22%)</title><rect x="165.9" y="325" width="2.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="168.94" y="335.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::lt (292,929,290 samples, 0.24%)</title><rect x="153.3" y="325" width="2.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="156.33" y="335.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (70,707,070 samples, 0.06%)</title><rect x="157.7" y="325" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="160.70" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr::precondition_check (40,404,040 samples, 0.03%)</title><rect x="165.5" y="325" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="168.55" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (20,202,020 samples, 0.02%)</title><rect x="189.9" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="192.88" y="303.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (90,909,090 samples, 0.08%)</title><rect x="173.2" y="341" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="176.19" y="351.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (60,606,060 samples, 0.05%)</title><rect x="124.9" y="325" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="127.92" y="335.5" ></text>
</g>
<g >
<title>__gmpn_redc_2_fat (50,505,050 samples, 0.04%)</title><rect x="183.5" y="341" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="186.52" y="351.5" ></text>
</g>
<g >
<title>_PyFunction_FastCallDict (40,404,040 samples, 0.03%)</title><rect x="133.9" y="309" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="136.86" y="319.5" ></text>
</g>
<g >
<title>[unknown] (15,868,686,710 samples, 13.22%)</title><rect x="15.3" y="341" width="156.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.26" y="351.5" >[unknown]</text>
</g>
<g >
<title>vfs_write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="245" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="174.11" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (60,606,060 samples, 0.05%)</title><rect x="164.9" y="325" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="167.95" y="335.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq::Fq as ff::Field&gt;::square (383,838,380 samples, 0.32%)</title><rect x="93.6" y="325" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="96.63" y="335.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (30,303,030 samples, 0.03%)</title><rect x="109.9" y="325" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="112.92" y="335.5" ></text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.04%)</title><rect x="130.9" y="293" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.88" y="303.5" ></text>
</g>
<g >
<title>[unknown] (575,757,570 samples, 0.48%)</title><rect x="128.8" y="325" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="131.79" y="335.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq::Fq as ff::Field&gt;::negate (101,010,100 samples, 0.08%)</title><rect x="92.6" y="325" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="95.64" y="335.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="309" width="281.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="911.71" y="319.5" >x86_64_start_reservations</text>
</g>
<g >
<title>PyLong_FromLong (70,707,070 samples, 0.06%)</title><rect x="11.7" y="341" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="14.69" y="351.5" ></text>
</g>
<g >
<title>_PyObject_FastCallKeywords (30,303,030 samples, 0.03%)</title><rect x="172.9" y="341" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="175.90" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (30,303,030 samples, 0.03%)</title><rect x="188.0" y="245" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="190.99" y="255.5" ></text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.04%)</title><rect x="130.9" y="277" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.88" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (50,505,050 samples, 0.04%)</title><rect x="907.6" y="213" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="910.61" y="223.5" ></text>
</g>
<g >
<title>__nss_group_lookup (70,707,070 samples, 0.06%)</title><rect x="186.8" y="341" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="189.80" y="351.5" ></text>
</g>
<g >
<title>PyUnicode_DecodeUTF8Stateful (20,202,020 samples, 0.02%)</title><rect x="14.5" y="341" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="17.47" y="351.5" ></text>
</g>
<g >
<title>start_secondary (73,070,706,340 samples, 60.89%)</title><rect x="190.2" y="325" width="718.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="193.18" y="335.5" >start_secondary</text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (131,313,130 samples, 0.11%)</title><rect x="31.6" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.55" y="335.5" ></text>
</g>
<g >
<title>__Pyx_AddTraceback (50,505,050 samples, 0.04%)</title><rect x="174.3" y="341" width="0.5" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="177.29" y="351.5" ></text>
</g>
<g >
<title>_PyLong_Init (20,202,020 samples, 0.02%)</title><rect x="134.3" y="309" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="137.26" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.02%)</title><rect x="189.9" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="192.88" y="319.5" ></text>
</g>
<g >
<title>snprintf (30,303,030 samples, 0.03%)</title><rect x="907.8" y="69" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="910.81" y="79.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.03%)</title><rect x="131.1" y="213" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.08" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (20,202,020 samples, 0.02%)</title><rect x="172.4" y="341" width="0.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="175.40" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (73,070,706,340 samples, 60.89%)</title><rect x="190.2" y="309" width="718.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="193.18" y="319.5" >cpu_startup_entry</text>
</g>
<g >
<title>__sched_text_end (28,595,959,310 samples, 23.83%)</title><rect x="908.7" y="181" width="281.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="911.71" y="191.5" >__sched_text_end</text>
</g>
<g >
<title>[unknown] (40,404,040 samples, 0.03%)</title><rect x="131.0" y="245" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.98" y="255.5" ></text>
</g>
<g >
<title>ena_dump_stats_ex (50,505,050 samples, 0.04%)</title><rect x="907.6" y="85" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="910.61" y="95.5" ></text>
</g>
<g >
<title>__gmpn_add_n_coreisbr (50,505,050 samples, 0.04%)</title><rect x="140.1" y="309" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="143.12" y="319.5" ></text>
</g>
<g >
<title>snprintf (20,202,020 samples, 0.02%)</title><rect x="907.6" y="53" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="910.61" y="63.5" ></text>
</g>
<g >
<title>irq_exit (50,505,050 samples, 0.04%)</title><rect x="907.6" y="181" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="910.61" y="191.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.02%)</title><rect x="131.2" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.18" y="111.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq::Fq as ff::Field&gt;::add_assign (818,181,810 samples, 0.68%)</title><rect x="44.8" y="325" width="8.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="47.76" y="335.5" ></text>
</g>
<g >
<title>PyUnicode_FromFormatV (30,303,030 samples, 0.03%)</title><rect x="14.8" y="341" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="17.77" y="351.5" ></text>
</g>
<g >
<title>PyOS_snprintf (40,404,040 samples, 0.03%)</title><rect x="122.3" y="325" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="125.34" y="335.5" ></text>
</g>
<g >
<title>memcpy (50,505,050 samples, 0.04%)</title><rect x="170.2" y="325" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="173.21" y="335.5" ></text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.04%)</title><rect x="130.9" y="261" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.88" y="271.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (141,414,140 samples, 0.12%)</title><rect x="15.3" y="325" width="1.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="18.26" y="335.5" ></text>
</g>
<g >
<title>__gmpn_sqr_basecase_coreisbr (272,727,270 samples, 0.23%)</title><rect x="184.0" y="341" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="187.02" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="245" width="281.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="911.71" y="255.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_exit (30,303,030 samples, 0.03%)</title><rect x="188.0" y="277" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="190.99" y="287.5" ></text>
</g>
<g >
<title>__pyx_f_6gevent_21__greenlet_primitives_25SwitchOutGreenletWithLoop_switch (50,505,050 samples, 0.04%)</title><rect x="149.1" y="325" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="152.06" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.02%)</title><rect x="171.1" y="309" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="174.11" y="319.5" ></text>
</g>
<g >
<title>call_timer_fn (50,505,050 samples, 0.04%)</title><rect x="907.6" y="133" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="910.61" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.02%)</title><rect x="171.1" y="293" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="174.11" y="303.5" ></text>
</g>
<g >
<title>&lt;pypairing::bls12_381::fq::Fq as ff::Field&gt;::mul_assign (3,929,292,890 samples, 3.27%)</title><rect x="54.0" y="325" width="38.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="57.00" y="335.5" >&lt;py..</text>
</g>
<g >
<title>__generic_file_write_iter (20,202,020 samples, 0.02%)</title><rect x="171.1" y="181" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="174.11" y="191.5" ></text>
</g>
<g >
<title>_PyObject_GetDictPtr (20,202,020 samples, 0.02%)</title><rect x="174.1" y="341" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="177.09" y="351.5" ></text>
</g>
<g >
<title>PyObject_Size (30,303,030 samples, 0.03%)</title><rect x="125.5" y="325" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="128.52" y="335.5" ></text>
</g>
<g >
<title>ksys_write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="261" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="174.11" y="271.5" ></text>
</g>
<g >
<title>PyStructSequence_New (40,404,040 samples, 0.03%)</title><rect x="13.4" y="341" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="16.38" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,202,020 samples, 0.02%)</title><rect x="16.8" y="325" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.75" y="335.5" ></text>
</g>
<g >
<title>PyThreadState_GetDict (30,303,030 samples, 0.03%)</title><rect x="130.5" y="309" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="133.48" y="319.5" ></text>
</g>
<g >
<title>PyEval_CallObjectWithKeywords (20,202,020 samples, 0.02%)</title><rect x="10.8" y="341" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="13.79" y="351.5" ></text>
</g>
<g >
<title>PyMethod_New (30,303,030 samples, 0.03%)</title><rect x="122.0" y="325" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="125.04" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (20,202,020 samples, 0.02%)</title><rect x="38.4" y="325" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="41.41" y="335.5" ></text>
</g>
<g >
<title>generic_perform_write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="165" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="174.11" y="175.5" ></text>
</g>
<g >
<title>__Pyx_CyFunction_CallAsMethod (80,808,080 samples, 0.07%)</title><rect x="138.0" y="325" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="141.03" y="335.5" ></text>
</g>
<g >
<title>start_kernel (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="293" width="281.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="911.71" y="303.5" >start_kernel</text>
</g>
<g >
<title>PyType_GenericAlloc (40,404,040 samples, 0.03%)</title><rect x="128.0" y="325" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="131.00" y="335.5" ></text>
</g>
<g >
<title>__pyx_pw_6gevent_8__waiter_6Waiter_17get (30,303,030 samples, 0.03%)</title><rect x="150.7" y="325" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="153.75" y="335.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (20,202,020 samples, 0.02%)</title><rect x="171.1" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="174.11" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::rev (90,909,090 samples, 0.08%)</title><rect x="160.4" y="325" width="0.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="163.38" y="335.5" ></text>
</g>
<g >
<title>PyErr_Occurred (20,202,020 samples, 0.02%)</title><rect x="109.7" y="325" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="112.72" y="335.5" ></text>
</g>
<g >
<title>PyObject_Bytes (20,202,020 samples, 0.02%)</title><rect x="122.7" y="325" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="125.74" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60,606,060 samples, 0.05%)</title><rect x="41.5" y="325" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="44.49" y="335.5" ></text>
</g>
<g >
<title>__sys_recvfrom (20,202,020 samples, 0.02%)</title><rect x="189.9" y="277" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="192.88" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (30,303,030 samples, 0.03%)</title><rect x="188.0" y="293" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="190.99" y="303.5" ></text>
</g>
<g >
<title>PyTraceBack_Here (30,303,030 samples, 0.03%)</title><rect x="127.1" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="130.11" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="277" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="174.11" y="287.5" ></text>
</g>
<g >
<title>PyObject_Bytes (20,202,020 samples, 0.02%)</title><rect x="12.7" y="341" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="15.68" y="351.5" ></text>
</g>
<g >
<title>_PyGen_Finalize (30,303,030 samples, 0.03%)</title><rect x="135.7" y="325" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="138.75" y="335.5" ></text>
</g>
<g >
<title>_PyFunction_FastCallDict (20,202,020 samples, 0.02%)</title><rect x="135.5" y="325" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="138.55" y="335.5" ></text>
</g>
<g >
<title>PyStructSequence_New (40,404,040 samples, 0.03%)</title><rect x="126.1" y="325" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="129.11" y="335.5" ></text>
</g>
<g >
<title>__Pyx_PyObject_GenericGetAttr (50,505,050 samples, 0.04%)</title><rect x="139.2" y="325" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="142.22" y="335.5" ></text>
</g>
<g >
<title>__pyx_f_6gevent_5libev_8corecext_4loop__run_callbacks (20,202,020 samples, 0.02%)</title><rect x="149.6" y="325" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="152.55" y="335.5" ></text>
</g>
<g >
<title>swapper (101,676,766,660 samples, 84.73%)</title><rect x="190.2" y="357" width="999.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="193.18" y="367.5" >swapper</text>
</g>
<g >
<title>core::cmp::min_by (161,616,160 samples, 0.13%)</title><rect x="158.4" y="325" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="161.39" y="335.5" ></text>
</g>
<g >
<title>malloc (20,202,020 samples, 0.02%)</title><rect x="170.0" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="173.02" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::zip (333,333,330 samples, 0.28%)</title><rect x="161.3" y="325" width="3.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="164.27" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (30,303,030 samples, 0.03%)</title><rect x="188.0" y="309" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="190.99" y="319.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (111,111,110 samples, 0.09%)</title><rect x="156.2" y="325" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="159.21" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (40,404,040 samples, 0.03%)</title><rect x="188.0" y="325" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="190.99" y="335.5" ></text>
</g>
<g >
<title>__gmpn_addmul_2_coreisbr (757,575,750 samples, 0.63%)</title><rect x="175.3" y="341" width="7.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="178.28" y="351.5" ></text>
</g>
<g >
<title>PyList_GetItem (20,202,020 samples, 0.02%)</title><rect x="11.3" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.29" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (20,202,020 samples, 0.02%)</title><rect x="907.6" y="37" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="910.61" y="47.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (141,414,140 samples, 0.12%)</title><rect x="38.7" y="325" width="1.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="41.71" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (50,505,050 samples, 0.04%)</title><rect x="908.2" y="245" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="911.21" y="255.5" ></text>
</g>
<g >
<title>arch_call_rest_init (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="277" width="281.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="911.71" y="287.5" >arch_call_rest_init</text>
</g>
<g >
<title>__gmpn_sub_n_coreisbr (40,404,040 samples, 0.03%)</title><rect x="140.7" y="309" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="143.71" y="319.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (20,202,020 samples, 0.02%)</title><rect x="12.9" y="341" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="15.88" y="351.5" ></text>
</g>
<g >
<title>_IO_str_seekoff (20,202,020 samples, 0.02%)</title><rect x="171.3" y="341" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="174.31" y="351.5" ></text>
</g>
<g >
<title>__Pyx_GetAttr3Default (20,202,020 samples, 0.02%)</title><rect x="174.9" y="341" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="177.88" y="351.5" ></text>
</g>
<g >
<title>native_safe_halt (28,595,959,310 samples, 23.83%)</title><rect x="908.7" y="165" width="281.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="911.71" y="175.5" >native_safe_halt</text>
</g>
<g >
<title>PyThreadState_Get@plt (20,202,020 samples, 0.02%)</title><rect x="126.9" y="325" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="129.91" y="335.5" ></text>
</g>
<g >
<title>_PyDict_GetItemId (90,909,090 samples, 0.08%)</title><rect x="171.5" y="341" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="174.51" y="351.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (50,505,050 samples, 0.04%)</title><rect x="129.3" y="309" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="132.29" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (50,505,050 samples, 0.04%)</title><rect x="907.6" y="149" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="910.61" y="159.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (50,505,050 samples, 0.04%)</title><rect x="129.8" y="309" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="132.79" y="319.5" ></text>
</g>
<g >
<title>PyObject_HasAttr (20,202,020 samples, 0.02%)</title><rect x="130.3" y="309" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="133.28" y="319.5" ></text>
</g>
<g >
<title>free_pgtables (20,202,020 samples, 0.02%)</title><rect x="188.0" y="229" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="190.99" y="239.5" ></text>
</g>
<g >
<title>__vfs_write (20,202,020 samples, 0.02%)</title><rect x="171.1" y="229" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="174.11" y="239.5" ></text>
</g>
<g >
<title>__gmpn_toom2_sqr (20,202,020 samples, 0.02%)</title><rect x="141.1" y="309" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="144.11" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (282,828,280 samples, 0.24%)</title><rect x="17.0" y="325" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="19.95" y="335.5" ></text>
</g>
<g >
<title>do_idle (28,606,060,320 samples, 23.84%)</title><rect x="908.7" y="229" width="281.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="911.71" y="239.5" >do_idle</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.02%)</title><rect x="131.2" y="133" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.18" y="143.5" ></text>
</g>
<g >
<title>_PyType_Lookup (70,707,070 samples, 0.06%)</title><rect x="137.0" y="325" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="140.04" y="335.5" ></text>
</g>
<g >
<title>slp_restore_state (20,202,020 samples, 0.02%)</title><rect x="170.8" y="325" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="173.81" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (50,505,050 samples, 0.04%)</title><rect x="907.6" y="165" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="910.61" y="175.5" ></text>
</g>
<g >
<title>core::cmp::PartialOrd::gt (141,414,140 samples, 0.12%)</title><rect x="151.9" y="325" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="154.94" y="335.5" ></text>
</g>
<g >
<title>__Pyx_IsSubtype (30,303,030 samples, 0.03%)</title><rect x="138.9" y="325" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="141.93" y="335.5" ></text>
</g>
<g >
<title>PyTuple_Pack (30,303,030 samples, 0.03%)</title><rect x="127.7" y="325" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="130.70" y="335.5" ></text>
</g>
<g >
<title>all (119,999,998,800 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>PyTuple_New (30,303,030 samples, 0.03%)</title><rect x="14.0" y="341" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="16.97" y="351.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (20,202,020 samples, 0.02%)</title><rect x="14.3" y="341" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="17.27" y="351.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.03%)</title><rect x="131.1" y="197" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.08" y="207.5" ></text>
</g>
<g >
<title>do_idle (73,070,706,340 samples, 60.89%)</title><rect x="190.2" y="293" width="718.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="193.18" y="303.5" >do_idle</text>
</g>
<g >
<title>_PyList_Extend (60,606,060 samples, 0.05%)</title><rect x="136.1" y="325" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="139.14" y="335.5" ></text>
</g>
<g >
<title>PyTuple_New (20,202,020 samples, 0.02%)</title><rect x="127.5" y="325" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="130.50" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.02%)</title><rect x="189.9" y="325" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="192.88" y="335.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (80,808,080 samples, 0.07%)</title><rect x="124.0" y="325" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="127.03" y="335.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.02%)</title><rect x="131.2" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="134.18" y="127.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (40,404,040 samples, 0.03%)</title><rect x="157.3" y="325" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="160.30" y="335.5" ></text>
</g>
<g >
<title>ena_timer_service (50,505,050 samples, 0.04%)</title><rect x="907.6" y="117" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="910.61" y="127.5" ></text>
</g>
<g >
<title>PyArg_ParseTupleAndKeywords (20,202,020 samples, 0.02%)</title><rect x="108.6" y="325" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="111.63" y="335.5" ></text>
</g>
</g>
</svg>
